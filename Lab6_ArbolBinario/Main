import java.util.LinkedList;
import java.util.Scanner;
import java.util.Stack;

public class Main {

    public static void main(String[] args) {
        Scanner teclado = new Scanner(System.in);
        // write your code here
        Stack<ArbolBinario> nodos=new Stack<>();
        for (int i = 0; i < 10; i++) {
            nodos.add(new ArbolBinario(i));
        }
        //voy emparejando de a dos nodos para construir el árbol
        while(nodos.size()>1){
            ArbolBinario iz=nodos.pop();
            ArbolBinario der=nodos.pop();
            nodos.push(new ArbolBinario(iz.dato+der.dato,iz,der));
        }
        ArbolBinario raiz=nodos.pop();
        System.out.println("Altura del arbol: "+raiz.altura());
        System.out.println("Tamaño del arbol (total de nodos): "+ raiz.size());
        raiz.tree();

        ArbolBinario[] nodos2=new ArbolBinario[32];
        for (int i = 0; i < nodos2.length; i++) {
            nodos2[i]=new ArbolBinario(i);
        }
        ArbolBinario raiz2=generaBinario(nodos2, 0, 31);
        System.out.println("Altura del arbol: "+raiz2.altura());
        System.out.println("Tamaño del arbol (total de nodos): "+ raiz2.size());
        raiz2.tree();

        LinkedList <ArbolBinario> listaParaExtraerNodos1 = new LinkedList<>();
        LinkedList <ArbolBinario> listaParaExtraerNodos2 = new LinkedList<>();

        System.out.println("ingrese el rango de los nodos que desea ver del arbol 1");
        int i = teclado.nextInt();
        int j = teclado.nextInt();
        listaParaExtraerNodos1 = raiz.rango(i,j);
        if (listaParaExtraerNodos1!=null){
            System.out.print("[");
            for (ArbolBinario nodoextraido:listaParaExtraerNodos1) {
                System.out.print(nodoextraido.dato+" - ");
            }
            System.out.println("]");
        }else{
            System.out.println("No existen nodos con un valor dentro del rango seleccionado en el arbol 1");
        }

        System.out.println("ingrese el rango de los nodos que desea ver del arbol 2");
        int i2 = teclado.nextInt();
        int j2= teclado.nextInt();
        listaParaExtraerNodos2 = raiz2.rango(i2,j2);
        if (listaParaExtraerNodos2!=null){
            System.out.print("[");
            for (ArbolBinario nodoextraido:listaParaExtraerNodos2) {
                System.out.print(nodoextraido.dato+" - ");
            }
            System.out.println("]");
        }else{
            System.out.println("No existen nodos con un valor dentro del rango seleccionado en el arbol 2");
        }


    }

    public static ArbolBinario generaBinario(ArbolBinario[] nodos, int i, int j){
        if(i>j){
            //caso base
            return null;
        }
        int mitad=(i+j)/2;
        nodos[mitad].iz=generaBinario(nodos, i,mitad-1);
        nodos[mitad].der=generaBinario(nodos,mitad+1,j);
        return nodos[mitad];
    }
}
